import streamlit as st
from app.utils import load_data, get_kpis

# Chargement des donnÃ©es
st.cache_data

df = load_data()
kpis = get_kpis(df)

# Titre & intro
st.title(" Projet Retail - Analyse & PrÃ©diction des ventes")

st.markdown(
    "Bienvenue sur cette application interactive de data science appliquÃ©e Ã  un cas retail simulÃ©.\n"
    "Ce projet vise Ã  explorer les dynamiques d'achat, modÃ©liser les ventes et dÃ©tecter des patterns \n"
    "grÃ¢ce Ã  une approche combinant modÃ¨les temporels classiques et analyse par graphes."
)

# AperÃ§u des donnÃ©es
st.subheader("ğŸ“¦ Jeu de donnÃ©es simulÃ©")
st.markdown(
    "Ce jeu de donnÃ©es couvre une pÃ©riode d'un an (mars 2023 - fÃ©vrier 2024),\n"
    "avec 90 produits rÃ©partis en 3 familles, et 500 clients diffÃ©rents.\n"
    "Les achats sont simulÃ©s sous forme de paniers multi-produits, avec canaux et remises."
)

# KPIs clÃ©s
col1, col2, col3 = st.columns(3)
col1.metric("Transactions", f"{kpis['transactions']:,}")
col2.metric("Produits uniques", kpis['produits_uniques'])
col3.metric("Clients", kpis['clients'])

col4, col5 = st.columns(2)
col4.metric("Chiffre d'affaires total (â‚¬)", f"{kpis['revenu_total']:,.2f}")
col5.metric("QuantitÃ©s vendues", f"{kpis['quantite_totale']:,}")

# AperÃ§u tableau
st.subheader("ğŸ§¾ Exemple de donnÃ©es")
st.dataframe(df.head())

# Liens
st.markdown("[ğŸ”— Code source sur GitHub](https://github.com/...)  ")
st.download_button("ğŸ“¥ TÃ©lÃ©charger les donnÃ©es", data=df.to_csv(index=False), file_name="transactions.csv")
